spring.jpa:
  database: postgresql
  hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
  hibernate.ddl-auto: update
  properties.hibernate.format_sql: true
  show-sql: true

spring.datasource:
  hikari.maxium-pool-size: 4
  url: jdbc:postgresql://localhost:5432/postgres
  username: postgres
  password: postgrespassword
  platform: postgres
  driver-class-name: org.postgresql.Driver

jwt:
  secret-key: fast_campus.sns-application-2022.secret_key
  token.expired-time-ms: 2592000000

spring.redis:
  host: localhost
  port: 6379

spring:
  kafka:
    consumer:
      properties.spring.json.trusted.packages: "*"
      bootstrap-servers: 127.0.0.1:9092
      group-id: test
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    listener:
      ack-mode: MANUAL
    producer:
      bootstrap-servers: 127.0.0.1:9092
      key-serializer: org.apache.kafka.common.serialization.IntegerSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties.enable.idempotence: false
    topic:
      alarm: test

#spring:
#  kafka:
#    bootstrap-servers: localhost:60749
#    consumer:
#      group-id: test
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#    topic:
#      alarm: test
#
